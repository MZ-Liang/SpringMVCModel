<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context" xmlns:util="http://www.springframework.org/schema/util"
  xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" 
  xmlns:task="http://www.springframework.org/schema/task" xmlns:cache="http://www.springframework.org/schema/cache"
  xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
    http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

  <description>Framework Configuration</description>

  <!-- Annotation自动注册 -->
  <context:component-scan base-package="com.cms">
    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
  </context:component-scan>

  <!-- 加载配置文件 -->
  <bean id="property" class="com.cms.core.PropertyPlaceholder">
    <property name="locations">
      <list>
        <value>classpath:cms.properties</value>
      </list>
    </property>
    <property name="fileEncoding" value="utf-8" />
  </bean>

  <!-- MySQL数据源配置 -->
  <bean id="mysqlDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
    <property name="driverClassName" value="${mysql.driver}" />
    <property name="url" value="${mysql.url}" />
    <property name="username" value="${mysql.username}" />
    <property name="password" value="${mysql.password}" />
    <property name="initialSize" value="${mysql.initialSize}" />
    <property name="minIdle" value="${mysql.minIdle}" />
    <property name="maxActive" value="${mysql.maxActive}" />
    <property name="maxWait" value="60000" />
    <property name="timeBetweenEvictionRunsMillis" value="60000" />
    <property name="minEvictableIdleTimeMillis" value="300000" />
    <property name="validationQuery" value="SELECT 'x'" />
    <property name="testWhileIdle" value="true" />
    <property name="testOnBorrow" value="false" />
    <property name="testOnReturn" value="false" />
    <property name="filters" value="stat,wall" />
    <property name="proxyFilters">
      <list>
        <ref bean="logFilter" />
      </list>
    </property>
  </bean>
  
  <!-- Druid输出Log -->
  <bean id="logFilter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter">
    <property name="connectionLogEnabled" value="false" />
    <property name="statementLogEnabled" value="false" />
    <property name="resultSetLogEnabled" value="true" />
    <property name="statementExecutableSqlLogEnable" value="true" />
  </bean>

  <!-- 配置本地数据源 -->
  <bean id="dataSource" class="com.cms.core.database.LocalRoutingDataSource">
    <property name="defaultTargetDataSource" ref="mysqlDataSource" />
    <property name="targetDataSources">
      <map key-type="com.cms.core.database.DataSourceType">
        <entry key="MYSQL" value-ref="mysqlDataSource" />
      </map>
    </property>
  </bean>

  <!-- 配置MyBatis -->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource" />
      <property name="mapperLocations">
          <list>
              <value>classpath*:/mapper/**/*.xml</value>
          </list>
      </property>
    <property name="configLocation" value="classpath:/mybatis-settings.xml" />
    <property name="typeAliasesPackage" value="com.cms.model" />
  </bean>

  <!-- 定义事务 -->
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource" />
  </bean>

  <!-- 扫描@Transactional注解的类定义事务 -->
  <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

  <!-- 声明式事务切面 -->
  <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      <tx:method name="get*Mix" propagation="REQUIRES_NEW" read-only="true" />
      <tx:method name="is*" propagation="REQUIRES_NEW" read-only="true" />
      <tx:method name="get*" propagation="NOT_SUPPORTED" read-only="true" />
      <tx:method name="find*" propagation="NOT_SUPPORTED" read-only="true" />
      <tx:method name="list*" propagation="NOT_SUPPORTED" read-only="true" />
      <tx:method name="select*" propagation="NOT_SUPPORTED" read-only="true" />
      <tx:method name="query*" propagation="NOT_SUPPORTED" read-only="true" />
      <tx:method name="search*" propagation="NOT_SUPPORTED" read-only="true" />
      <tx:method name="count*" propagation="NOT_SUPPORTED" read-only="true" />
      <tx:method name="*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
    </tx:attributes>
  </tx:advice>

  <!-- 开启AOP监听 -->
  <aop:aspectj-autoproxy expose-proxy="true" />

  <!-- 开启AOP监听 -->
  <aop:config expose-proxy="true" proxy-target-class="true">
    <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.cms.*.service..*+.*(..))" order="3" />
  </aop:config>

  <!-- MyBatis自动注入 -->
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="annotationClass" value="org.springframework.stereotype.Repository" />
    <property name="basePackage" value="com.cms.mapper" />
    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
  </bean>

  <!-- 视图模板配置 -->
  <bean id="freeMarkerConfigurer" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
    <property name="templateLoaderPath" value="/WEB-INF/view" />
    <property name="freemarkerSettings">
      <props>
        <prop key="default_encoding">UTF-8</prop>
        <prop key="locale">zh_CN</prop>
        <prop key="number_format">0.##########</prop>
        <prop key="date_format">yyyy-MM-dd</prop>
        <prop key="time_format">HH:mm</prop>
        <prop key="datetime_format">yyyy-MM-dd HH:mm</prop>
      </props>
    </property>
    <property name="freemarkerVariables">
      <map>
        <entry key="formatDate" value-ref="dateFormat" />
        <entry key="ellipsis" value-ref="ellipsisText" />
        <entry key="prop" value-ref="prop" />
      </map>
    </property>
  </bean>

  <!-- 本地模板配置 -->
  <bean id="freeMarkerConfiguration" class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
    <property name="templateLoaderPath" value="classpath:template" />
    <property name="freemarkerSettings">
      <props>
        <prop key="default_encoding">UTF-8</prop>
        <prop key="locale">zh_CN</prop>
        <prop key="number_format">0.##########</prop>
        <prop key="date_format">yyyy-MM-dd</prop>
        <prop key="time_format">HH:mm</prop>
        <prop key="datetime_format">yyyy-MM-dd HH:mm</prop>
      </props>
    </property>
    <property name="freemarkerVariables">
      <map>
        <entry key="formatDate" value-ref="dateFormat" />
        <entry key="ellipsis" value-ref="ellipsisText" />
        <entry key="prop" value-ref="prop" />
      </map>
    </property>
  </bean>

  <!-- 模板日期格式化标签 -->
  <bean id="dateFormat" class="com.cms.core.template.DateFormatDirective" />
  <!-- HTML特殊字符转义 -->
  <bean id="ellipsisText" class="com.cms.core.template.EllipsisTextDirective" />
  <!-- Properties读取 -->
  <bean id="prop" class="com.cms.core.template.PropertiesDirective" />

  <!-- 邮件 -->
  <bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
    <property name="defaultEncoding" value="UTF-8"></property>
    <property name="javaMailProperties">
      <props>
        <prop key="mail.smtp.auth">true</prop>
        <prop key="mail.transport.protocol">smtp</prop>
        <prop key="mail.smtp.timeout">5000</prop>
      </props>
    </property>
  </bean>

  <!-- 模板视图解析器 -->
  <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
    <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
    <property name="contentType" value="text/html;charset=utf-8" />
    <property name="cache" value="true" />
    <property name="suffix" value=".html" />
    <property name="requestContextAttribute" value="request" />
    <property name="exposeRequestAttributes" value="true" />
    <property name="exposeSessionAttributes" value="true" />
    <property name="exposeSpringMacroHelpers" value="true" />
    <property name="order" value="0" />
  </bean>

  <!-- 上传文件 -->
  <bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <property name="defaultEncoding" value="utf-8" />
    <property name="maxUploadSize" value="${web.upload.maxUploadSize}" />
    <property name="maxInMemorySize" value="${web.upload.maxInMemorySize}" />
  </bean>

  <!-- ID生成服务 -->
  <!-- <bean id="idGenService" class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
    <property name="serviceUrl" value="${gen.url}/lpdpgen/idGenService" />
    <property name="serviceInterface" value="cn.com.lawpress.lpdpgen.IdGenerator" />
  </bean> -->

    <!-- 头像上传服务 -->
  <!-- <bean id="resUploadService" class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
    <property name="serviceUrl" value="${remote.url}/lpdp-remote/resUploadService" />
    <property name="serviceInterface" value="cn.com.lawpress.remote.resource.ResUploadService" />
  </bean> -->

  <!-- 系统代码初始化 -->
  <!-- <bean class="com.cms.common.SystemCode" init-method="init" /> -->

  <!-- 服务器启动加载 -->
  <bean class="com.cms.core.StartAddCacheListener" />

  <!-- Spring监控 -->
  <!-- <aop:config proxy-target-class="true"> -->
  <!-- <aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" /> -->
  <!-- </aop:config> -->

  <!-- Druid监控拦截器 -->
  <!-- <bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor" /> -->

  <!-- 根据方法名正则匹配拦截 -->
  <!-- <bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype"> -->
  <!-- <property name="patterns"> -->
  <!-- <list> -->
  <!-- <value>cn.com.lawpress.lpdp.service.*</value> -->
  <!-- <value>cn.com.lawpress.lpdp.dao.*</value> -->
  <!-- </list> -->
  <!-- </property> -->
  <!-- </bean> -->

  <bean id="writableSQLSession" class="org.mybatis.spring.SqlSessionTemplate">
    <constructor-arg index="0" ref="sqlSessionFactory" />
  </bean>

  <bean id="readonlySQLSession" class="org.mybatis.spring.SqlSessionTemplate">
    <constructor-arg index="0" ref="sqlSessionFactory" />
  </bean>

  <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    <property name="dataSource" ref="dataSource"></property>
  </bean>
</beans>